name: Deploy to Firebase Hosting and APK/AAB on merge

on:
  push:
    branches:
      - main

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - uses: actions/checkout@v4

      # Set up Java
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'

      # Install Flutter
      - name: Install Flutter
        uses: subosito/flutter-action@v2

      # Read and increment version from version.txt
      - name: Read and update version
        id: versioning
        run: |
          VERSION_FILE=".github/workflows/version.txt"
          if [ ! -f "$VERSION_FILE" ]; then
            echo "1.0.0" > "$VERSION_FILE"
          fi
          
          VERSION=$(cat "$VERSION_FILE")
          MAJOR=$(echo $VERSION | cut -d. -f1)
          MINOR=$(echo $VERSION | cut -d. -f2)
          PATCH=$(echo $VERSION | cut -d. -f3)
          
          # Auto-increment PATCH version (X.Y.Z â†’ X.Y.(Z+1))
          PATCH=$((PATCH + 1))
          NEW_VERSION="$MAJOR.$MINOR.$PATCH"

          echo "$NEW_VERSION" > "$VERSION_FILE"
          echo "VERSION_CODE=$PATCH" >> $GITHUB_ENV
          echo "VERSION_NAME=$NEW_VERSION" >> $GITHUB_ENV

      # Update version in local.properties
      - name: Update version in local.properties
        run: |
          echo "flutter.versionCode=${{ env.VERSION_CODE }}" >> android/local.properties
          echo "flutter.versionName=${{ env.VERSION_NAME }}" >> android/local.properties

      # Commit updated version.txt and local.properties
      - name: Commit version changes
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "github-actions@github.com"
          git add .github/workflows/version.txt android/local.properties
          git commit -m "Auto-incremented version to ${{ env.VERSION_NAME }}"
          git push origin main || echo "No changes to commit"

      # Decode Keystore
      - name: Decode Keystore
        env:
          ANDROID_KEYSTORE: ${{ secrets.ANDROID_KEYSTORE }}
        run: |
          echo "$ANDROID_KEYSTORE" | base64 --decode > android/app/college-finder.jks

      # Create key.properties file
      - name: Create key.properties
        run: |
          echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" > android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
          echo "storeFile=college-finder.jks" >> android/key.properties

      # Build Flutter web
      - name: Build Flutter web
        run: flutter build web

      # Build Flutter APK
      - name: Build Flutter APK
        run: flutter build apk --release

      # Build Flutter AAB
      - name: Build Flutter AAB
        run: flutter build appbundle --release

      # Deploy Web to Firebase Hosting
      - name: Deploy Web to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_COLLEGE_FINDER_54F2C }}
          channelId: live
          projectId: college-finder-54f2c

      # Install Firebase CLI
      - name: Install Firebase CLI
        run: |
          curl -sL https://firebase.tools | bash

      # Deploy APK to Firebase App Distribution
      - name: Deploy APK to Firebase App Distribution
        run: |
          firebase appdistribution:distribute build/app/outputs/flutter-apk/app-release.apk \
          --app "1:36597009887:android:0fec54d9bc8e280453486a" \
          --token ${{ secrets.FIREBASE_TOKEN }}

      # Deploy AAB to Firebase App Distribution
      - name: Deploy AAB to Firebase App Distribution
        run: |
          firebase appdistribution:distribute build/app/outputs/bundle/release/app-release.aab \
          --app "1:36597009887:android:0fec54d9bc8e280453486a" \
          --token ${{ secrets.FIREBASE_TOKEN }}
