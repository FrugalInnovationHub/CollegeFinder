name: Push iOS build on Firebase

on:
  push:
    branches:
      - main

jobs:
  ios_deployment:
    runs-on: macos-latest
    env:
      APP_STORE_CONNECT_PRIVATE_KEY: ${{ secrets.APP_STORE_CONNECT_API_KEY }}
      APP_STORE_CONNECT_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
      APP_STORE_CONNECT_KEY_IDENTIFIER: ${{ secrets.APP_STORE_CONNECT_KEY_ID }}
      APP_STORE_APP_ID: ${{ secrets.APP_STORE_APP_ID }}
      DISTRIBUTION_CERTIFICATE: ${{ secrets.IOS_DISTRIBUTION_CERT }}
      DISTRIBUTION_CERTIFICATE_PASSWORD: ${{ secrets.IOS_DISTRIBUTION_CERT_PASSWORD }}
      PROVISIONING_PROFILE: ${{ secrets.IOS_PROVISIONING_PROFILE }}

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Set Xcode Command Line Tools
        run: sudo xcode-select -switch /Applications/Xcode.app/Contents/Developer

      - name: Set up Flutter SDK
        uses: flutter-actions/setup-flutter@v3
        with:
          channel: stable
          version: 3.24.0

      - name: Install dependencies
        run: |
          flutter clean
          flutter pub get

      - name: Cache Pods
        uses: actions/cache@v3
        with:
          path: ios/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('ios/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: Install CocoaPods dependencies
        run: |
          cd ios
          pod install --repo-update

      - name: Install the CodeMagic CLI
        run: pip install codemagic-cli-tools

      - name: Initialize keychain
        run: keychain initialize

      - name: Set up Provisioning Profile
        run: |
          PROFILES_HOME="$HOME/Library/MobileDevice/Provisioning Profiles"
          mkdir -p "$PROFILES_HOME"
          PROFILE_PATH="$(mktemp "$PROFILES_HOME"/$(uuidgen).mobileprovision)"
          echo ${PROVISIONING_PROFILE} | base64 --decode > "$PROFILE_PATH"
          echo "Saved provisioning profile $PROFILE_PATH"   

      - name: Set up Distribution Certificate
        run: |
          echo $DISTRIBUTION_CERTIFICATE | base64 --decode > /tmp/certificate.p12
          keychain add-certificates --certificate /tmp/certificate.p12 --certificate-password $DISTRIBUTION_CERTIFICATE_PASSWORD

      - name: Set up Code signing settings on Xcode project
        run: xcode-project use-profiles

      - name: Decode GoogleService-Info.plist
        run: |
          echo $GOOGLE_SERVICE_INFO | base64 --decode > ios/Runner/GoogleService-Info.plist
        env:
          GOOGLE_SERVICE_INFO: ${{ secrets.GOOGLE_INFO_PLIST }}

      - name: Install Fastlane
        working-directory: ios
        run: bundle install

      - name: Increment iOS Build Number
        working-directory: ios
        run: bundle exec fastlane ios fetch_and_increment_build_number

      - name: Fetch updated build number
        working-directory: ios
        run: |
          if [ ! -f build_number.txt ]; then
            echo "❌ build_number.txt not found!"
            exit 1
          fi
          BUILD_NUMBER=$(cat build_number.txt | tr -d '\n')
          echo "BUILD_NUMBER=$BUILD_NUMBER" >> $GITHUB_ENV
          echo "✅ Updated Build Number: $BUILD_NUMBER"

      - name: Build IPA for Distribution
        run: |
          flutter build ipa --release \
          --build-name=1.0.0 \
          --build-number=$BUILD_NUMBER \
          --export-options-plist=$HOME/export_options.plist

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Deploy IPA to Firebase App Distribution
        run: |
          firebase appdistribution:distribute build/ios/ipa/*.ipa \
          --app "1:36597009887:ios:1f2605c8364b9e9153486a" \
          --token ${{ secrets.FIREBASE_TOKEN }}
